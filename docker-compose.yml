services:
  scandy-mongodb-:
    image: mongo:7
    container_name: scandy-mongodb-
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - scandy-network-
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s
    env_file:
      - .env

  scandy-mongo-express-:
    image: mongo-express:1.0.0
    container_name: scandy-mongo-express-
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://admin:${MONGO_INITDB_ROOT_PASSWORD}@scandy-mongodb-:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      scandy-mongodb-:
        condition: service_healthy
    networks:
      - scandy-network-
    env_file:
      - .env

  scandy-app-:
    build:
      context: .
      dockerfile: Dockerfile
    image: scandy-local:dev-
    container_name: scandy-app-
    restart: unless-stopped
    environment:
      - DATABASE_MODE=mongodb
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=${MONGODB_DB}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - SYSTEM_NAME=${SYSTEM_NAME}
      - TICKET_SYSTEM_NAME=${TICKET_SYSTEM_NAME}
      - TOOL_SYSTEM_NAME=${TOOL_SYSTEM_NAME}
      - CONSUMABLE_SYSTEM_NAME=${CONSUMABLE_SYSTEM_NAME}
      - CONTAINER_NAME=${CONTAINER_NAME}
      - TZ=Europe/Berlin
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}
      - REMEMBER_COOKIE_SECURE=${REMEMBER_COOKIE_SECURE}
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app/app
      - app_uploads_:/app/app/uploads
      - app_backups_:/app/app/backups
      - app_logs_:/app/app/logs
      - app_sessions_:/app/app/flask_session
    depends_on:
      scandy-mongodb-:
        condition: service_healthy
    networks:
      - scandy-network-
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    env_file:
      - .env

volumes:
  mongodb_data_:
    driver: local
  app_uploads_:
    driver: local
  app_backups_:
    driver: local
  app_logs_:
    driver: local
  app_sessions_:
    driver: local

networks:
  scandy-network-:
    driver: bridge
