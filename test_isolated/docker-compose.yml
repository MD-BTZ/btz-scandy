version: '3.8'

services:
  app-test_isolated:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        - INSTANCE_NAME=test_isolated
    container_name: scandy-app-test_isolated
    restart: unless-stopped
    environment:
      - DATABASE_MODE=mongodb
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb-test_isolated:27017/${MONGODB_DB}
      - MONGODB_DB=${MONGODB_DB}
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - SYSTEM_NAME=${SYSTEM_NAME}
      - TICKET_SYSTEM_NAME=${TICKET_SYSTEM_NAME}
      - TOOL_SYSTEM_NAME=${TOOL_SYSTEM_NAME}
      - CONSUMABLE_SYSTEM_NAME=${CONSUMABLE_SYSTEM_NAME}
      - CONTAINER_NAME=${CONTAINER_NAME}
      - TZ=Europe/Berlin
      - SESSION_COOKIE_SECURE=False
      - REMEMBER_COOKIE_SECURE=False
      - INSTANCE_NAME=${INSTANCE_NAME}
      - SESSION_FILE_DIR=${SESSION_FILE_DIR}
      - SESSION_TYPE=${SESSION_TYPE}
      - SESSION_PERMANENT=${SESSION_PERMANENT}
      - PERMANENT_SESSION_LIFETIME=${PERMANENT_SESSION_LIFETIME}
      - MONGODB_DB=${MONGODB_DB}
      - MONGODB_COLLECTION_PREFIX=${MONGODB_COLLECTION_PREFIX}
    ports:
      - "5003:5000"
    volumes:
      - ../app:/app/app
      - app_uploads_test_isolated:/app/app/uploads
      - app_backups_test_isolated:/app/app/backups
      - app_logs_test_isolated:/app/app/logs
      - app_sessions_test_isolated:/app/app/flask_session_test_isolated
    depends_on:
      mongodb-test_isolated:
        condition: service_healthy
    networks:
      - scandy-network-test_isolated
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    env_file:
      - .env

  mongodb-test_isolated:
    image: mongo:7
    container_name: scandy-mongodb-test_isolated
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - "27020:27017"
    volumes:
      - mongodb_data_test_isolated:/data/db
      - ../mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - scandy-network-test_isolated
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express-test_isolated:
    image: mongo-express:1.0.0
    container_name: scandy-mongo-express-test_isolated
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb-test_isolated:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    ports:
      - "8084:8081"
    depends_on:
      mongodb-test_isolated:
        condition: service_healthy
    networks:
      - scandy-network-test_isolated

volumes:
  mongodb_data_test_isolated:
    driver: local
  app_uploads_test_isolated:
    driver: local
  app_backups_test_isolated:
    driver: local
  app_logs_test_isolated:
    driver: local
  app_sessions_test_isolated:
    driver: local

networks:
  scandy-network-test_isolated:
    driver: bridge
