@echo off
setlocal enabledelayedexpansion

echo ==========================================
echo Scandy - Plattform√ºbergreifender Start
echo ==========================================
echo.

REM Pr√ºfe Docker-Installation
echo [1/5] Pr√ºfe Docker-Installation...
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker ist nicht installiert oder nicht verf√ºgbar
    echo Bitte installieren Sie Docker Desktop: https://www.docker.com/products/docker-desktop
    pause
    exit /b 1
)
echo ‚úÖ Docker ist verf√ºgbar

REM Pr√ºfe Docker-Compose
echo [2/5] Pr√ºfe Docker Compose...
docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker Compose ist nicht verf√ºgbar
    echo Versuche mit 'docker compose' (neue Syntax)...
    docker compose version >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå Docker Compose ist nicht verf√ºgbar
        pause
        exit /b 1
    ) else (
        set DOCKER_COMPOSE_CMD=docker compose
    )
) else (
    set DOCKER_COMPOSE_CMD=docker-compose
)
echo ‚úÖ Docker Compose ist verf√ºgbar

REM Stoppe bestehende Container
echo [3/5] Stoppe bestehende Container...
%DOCKER_COMPOSE_CMD% down >nul 2>&1
echo ‚úÖ Bestehende Container gestoppt

REM Starte Container
echo [4/5] Starte Scandy-Container...
%DOCKER_COMPOSE_CMD% up -d --build
if errorlevel 1 (
    echo ‚ùå Fehler beim Starten der Container
    echo.
    echo Versuche alternative Start-Methode...
    docker-compose up -d --build
    if errorlevel 1 (
        echo ‚ùå Container konnten nicht gestartet werden
        pause
        exit /b 1
    )
)
echo ‚úÖ Container gestartet

REM Warte auf Container-Start
echo [5/5] Warte auf Container-Start...
timeout /t 15 /nobreak >nul

REM Teste Verbindungen
echo.
echo ==========================================
echo Verbindungstests
echo ==========================================

REM Teste MongoDB
echo Teste MongoDB-Verbindung...
curl -s http://127.0.0.1:27017 >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  MongoDB nicht direkt erreichbar (normal in Docker)
) else (
    echo ‚úÖ MongoDB ist erreichbar
)

REM Teste App
echo Teste Scandy-App...
curl -s http://127.0.0.1:5000 >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  App noch nicht bereit, warte...
    timeout /t 10 /nobreak >nul
    curl -s http://127.0.0.1:5000 >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå App ist nicht erreichbar
        echo Pr√ºfe Logs mit: %DOCKER_COMPOSE_CMD% logs scandy-app
    ) else (
        echo ‚úÖ App ist erreichbar
    )
) else (
    echo ‚úÖ App ist erreichbar
)

REM Teste Mongo Express
echo Teste Mongo Express...
curl -s http://127.0.0.1:8081 >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  Mongo Express noch nicht bereit
) else (
    echo ‚úÖ Mongo Express ist erreichbar
)

echo.
echo ==========================================
echo Scandy ist verf√ºgbar unter:
echo ==========================================
echo.
echo üåê Hauptanwendung: http://localhost:5000
echo üåê Hauptanwendung: http://127.0.0.1:5000
echo.
echo üìä Mongo Express: http://localhost:8081
echo üìä Mongo Express: http://127.0.0.1:8081
echo.
echo üóÑÔ∏è  MongoDB: localhost:27017
echo üóÑÔ∏è  MongoDB: 127.0.0.1:27017
echo.
echo ==========================================
echo Container-Status:
echo ==========================================
%DOCKER_COMPOSE_CMD% ps
echo.
echo ==========================================
echo N√ºtzliche Befehle:
echo ==========================================
echo Container stoppen: %DOCKER_COMPOSE_CMD% down
echo Logs anzeigen: %DOCKER_COMPOSE_CMD% logs
echo App-Logs: %DOCKER_COMPOSE_CMD% logs scandy-app
echo MongoDB-Logs: %DOCKER_COMPOSE_CMD% logs scandy-mongodb
echo.
pause 