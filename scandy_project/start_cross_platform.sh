#!/bin/bash

echo "=========================================="
echo "Scandy - Plattform√ºbergreifender Start"
echo "=========================================="
echo

# Pr√ºfe Docker-Installation
echo "[1/5] Pr√ºfe Docker-Installation..."
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker ist nicht installiert oder nicht verf√ºgbar"
    echo "Bitte installieren Sie Docker: https://docs.docker.com/get-docker/"
    exit 1
fi
echo "‚úÖ Docker ist verf√ºgbar"

# Pr√ºfe Docker-Compose
echo "[2/5] Pr√ºfe Docker Compose..."
if command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker-compose"
elif command -v docker &> /dev/null && docker compose version &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker compose"
else
    echo "‚ùå Docker Compose ist nicht verf√ºgbar"
    exit 1
fi
echo "‚úÖ Docker Compose ist verf√ºgbar"

# Stoppe bestehende Container
echo "[3/5] Stoppe bestehende Container..."
$DOCKER_COMPOSE_CMD down >/dev/null 2>&1
echo "‚úÖ Bestehende Container gestoppt"

# Starte Container
echo "[4/5] Starte Scandy-Container..."
$DOCKER_COMPOSE_CMD up -d --build
if [ $? -ne 0 ]; then
    echo "‚ùå Fehler beim Starten der Container"
    echo
    echo "Versuche alternative Start-Methode..."
    docker-compose up -d --build
    if [ $? -ne 0 ]; then
        echo "‚ùå Container konnten nicht gestartet werden"
        exit 1
    fi
fi
echo "‚úÖ Container gestartet"

# Warte auf Container-Start
echo "[5/5] Warte auf Container-Start..."
sleep 15

# Teste Verbindungen
echo
echo "=========================================="
echo "Verbindungstests"
echo "=========================================="

# Teste MongoDB
echo "Teste MongoDB-Verbindung..."
if curl -s http://127.0.0.1:27017 >/dev/null 2>&1; then
    echo "‚úÖ MongoDB ist erreichbar"
else
    echo "‚ö†Ô∏è  MongoDB nicht direkt erreichbar (normal in Docker)"
fi

# Teste App
echo "Teste Scandy-App..."
if curl -s http://127.0.0.1:5000 >/dev/null 2>&1; then
    echo "‚úÖ App ist erreichbar"
else
    echo "‚ö†Ô∏è  App noch nicht bereit, warte..."
    sleep 10
    if curl -s http://127.0.0.1:5000 >/dev/null 2>&1; then
        echo "‚úÖ App ist erreichbar"
    else
        echo "‚ùå App ist nicht erreichbar"
        echo "Pr√ºfe Logs mit: $DOCKER_COMPOSE_CMD logs scandy-app"
    fi
fi

# Teste Mongo Express
echo "Teste Mongo Express..."
if curl -s http://127.0.0.1:8081 >/dev/null 2>&1; then
    echo "‚úÖ Mongo Express ist erreichbar"
else
    echo "‚ö†Ô∏è  Mongo Express noch nicht bereit"
fi

echo
echo "=========================================="
echo "Scandy ist verf√ºgbar unter:"
echo "=========================================="
echo
echo "üåê Hauptanwendung: http://localhost:5000"
echo "üåê Hauptanwendung: http://127.0.0.1:5000"
echo
echo "üìä Mongo Express: http://localhost:8081"
echo "üìä Mongo Express: http://127.0.0.1:8081"
echo
echo "üóÑÔ∏è  MongoDB: localhost:27017"
echo "üóÑÔ∏è  MongoDB: 127.0.0.1:27017"
echo
echo "=========================================="
echo "Container-Status:"
echo "=========================================="
$DOCKER_COMPOSE_CMD ps
echo
echo "=========================================="
echo "N√ºtzliche Befehle:"
echo "=========================================="
echo "Container stoppen: $DOCKER_COMPOSE_CMD down"
echo "Logs anzeigen: $DOCKER_COMPOSE_CMD logs"
echo "App-Logs: $DOCKER_COMPOSE_CMD logs scandy-app"
echo "MongoDB-Logs: $DOCKER_COMPOSE_CMD logs scandy-mongodb"
echo 